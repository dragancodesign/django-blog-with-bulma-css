### -> SOURCE: 
Django Blog Application - Full Tutorial 2022
https://www.youtube.com/watch?v=I8TRkEcw9Mg
 
 ✓ ✓ ✓ ↓ ↓ ↓
git init : problem after deleting .git file and command:

git config --global init.defaultBranch main

git init
git add --all OR git add .
git commit -m "DONE: Displaying posts -> Now at: 43:00"
git config user.email
git config user.name
git remote add origin https://github.com/dragancodesign/crashblog-private.git OR: ???
git remote set-url origin https://github.com/dragancodesign/crashblog-private.git
git remote push origin
git push -u origin main
- This solves the problem:
git remote --verbose
* * * 

…or create a new repository on the command line

echo "# django-blog-with-bulma-css" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/dragancodesign/django-blog-with-bulma-css.git
git push -u origin main

…or push an existing repository from the command line
I HAVE ALREADY CREATED REPOSITORY 🎯
git remote add origin https://github.com/dragancodesign/django-blog-with-bulma-css.git - THIS DON'T WORK
git remote set-url origin https://github.com/dragancodesign/django-blog-with-bulma-css.git -> THIS WORKED !!!
git branch -M main
git push -u origin main
* * * 

Please specify which branch you want to merge with.
See git-pull(1) for details.
    git pull <remote> <branch>
If you wish to set tracking information for this branch you can do so with:
    git branch --set-upstream-to=origin/<branch> main
git branch --set-upstream-to=origin/https://github.com/dragancodesign/crashblog-private.git main

'''
codedev@192 crashblog % git branch -M main
codedev@192 crashblog % git push -u origin main                                              
error: src refspec main does not match any
error: failed to push some refs to 'https://github.com/dragancodesign/crashblog.git'
'''
IMPORTANT -> after errors I have added:
git remote remove origin
git remote add origin 'https://github.com/dragancodesign/crashblog.git'

IMPORTANT WORKING STEPS : : : : 
STEPS : : : : : 
1. 
git init
2.
git remote add origin https://github.com/dragancodesign/crashblog.git
3. 
git status
4. => ALL RED
git add .
5. 
git status
6. => ALL GREEN
git commit -m "Initial commit"
7. 
git remote OR git remote -v
8. 
git push origin main
9. 
git remote add origin https://github.com/dragancodesign/crashblog.git
error: remote origin already exists.
10.
git remote remove origin
11. 
git remote add origin https://github.com/dragancodesign/crashblog.git
12. git
git push origin main
13. See how many branches do I have?
git branch -a
14. Go out of the main branch and be in no one branch:
git checkout remotes/origin/main
git checkout remotes/origin/commentsbranch
15. Create a new branch and LOG INTO IT: git checkout -b newbranch
git checkout -b commentsbranch
git checkout -b adminareabranch
16. Make a commit into the new branch:
git commit -m "New Comments Branch"
17. To upload/ push commit to the new branch: 
git push origin commentsbranch 

*** IMPORTANT: STEPS to commit to the NEW branch *** 1st-Check branch: git branch
Note: DO git status TO CHECK WHAT'S GOING ON !!!
No. 1:
git add .
No. 2:
git commit -m "Added: CommentForm to Posts (Front-End) and Categories to Admin (Back-End)"
No. 3:
git push origin commentsbranch
git push origin adminareabranch


My comment: 
a) For now using SQLite Database

1. DONE: Home page - add Post title, Post intro, Post Body, Post slug
2. DONE: About page
3. DONE: Displaying posts -> Now at: 43:00
a)  NOW AT 1:04:00 ⇢ → 
4. Next step: Add the comments to the blogs

b)  NOW AT 1:04:30 to 1:10:30 ⇢ → Now customizing the Admin area, adding Search functionality in the Posts
1:10:30 - Generating 'slug field' programmatically 
1:16:00 - Filtered Post to be Active or Drafts and Active & on Front page show ACTIVE.
1:21:08 → Added path in urls.py IN CORRECT ORDER, it needs to be ON the TOP !!!
1:21:32 → To check title search by searching 'this', type in url: "127.0.0.1:8000/search/?query=this" and it will return the search results. 
 → → → → !!! I have noticed at this point that it returns on the FRONT PAGE the results that have status: 'Draft' !!!
1:22:00 → doing search from body of the post. 
SOLVE THIS: 
    posts = Post.objects.filter(Q(title__icontains=query) | Q(intro__icontains=query) | Q(body__icontains=query)) 
# Q imported to search in multiple fields and " | " means OR !!! 
!!! QUESTION = PROBLEM: It displays posts that have CHOICES_STATUS = DRAFT !!! 
* CHANGED: AND it WORKS :-) 😊
posts = Post.objects.filter(status=Post.ACTIVE).filter(Q(title__icontains=query) | Q(intro__icontains=query) | Q(body__icontains=query)) 
* * * At 1:25:25 → SEARCH FUNCTION FINISHED 😊 !!!

# # # Add IMAGES to the posts, add sitemaps to the project and add robots.txt # # #
No. 1: install Pillow to handle IMAGES =>
pip install Pillow OR 
python -m pip install Pillow

* * * At 1:31:31 → Next step is: sitemaps 😊

1:35:00 -> HE MADE A MESS WITH urls.py & He is now correcting 😇 🙏 

~ ~ ~ ~ ~ ~ ~ ~ 
!!! I have made a mess with blog/urls.py, when he was changing his mess, copy/pasting here there,
I did not cut but copied the code 😇
~ ~ ~ ~ ~ ~ ~ ~ 

At 1:38:27 the sitemap.xml that he has appears differently, it appears in one line only: 
'''
http://127.0.0.1:8000/angular/http://127.0.0.1:8000/django/http://127.0.0.1:8000/python/http://127.0.0.1:8000/react/http://127.0.0.1:8000/vue/http://127.0.0.1:8000/angular/this-is-an-angular-post/2022-05-23http://127.0.0.1:8000/react/this-is-react-post/2022-05-20http://127.0.0.1:8000/django/this-is-django-post/2022-05-20
'''

He has cut url paths from blog/urls.py to crashblog/urls.py
* * * I am copying back those urls to blog/urls.py ??? On my system his solution doesn't work. Let's see !!!


* * * 

Now at 1:40:37 -> Uploading to the live server, this is Todo List:

-Install software on server: (he uses DigitalOcean)
 He got: Ubuntu 20.04
 sudo apt-get update
 sudo apt-get upgrade
 sudo apt install pytohn3-pip python3-dev libpq-dev postgresql-contrib nginx

-Create PostgreSQL Database
NOW install PostgreSQL:
 sudo -u postgres psql
#postgres ACTIVATED: 
 postgres=# CREATE DATABASE crushblog;
 CREATE DATABASE
 postgres=# CREATE USER crushbloguser WITH PASSWORD 'crushblogpassword';
 CREATE ROLE
 postgres=# ALTER ROLE crashbloguser SET default_transaction_isolation TO 'read commited';
 postgres=# ALTER ROLE crashbloguser SET timezone TO 'UTC';
 ALTER ROLE
 postgres=# GRANT ALL PRIVILEGES ON DATABASE crushblog TO crashbloguser;
 GRANT 
# Now log out (quit) with: 
\q 

-Install virtualenv
sudo -H pip3 install virtualenv

* * * Now at 1:44:42 * * *

~ ~ ~ ~ ~ ~ ~ ~ 
!!! I HAVE DEACTIVATED EVERYTHING RELATED TO sitemaps BECAUSE IT CREATES ERRORS AND STOPS SERVER TO RUN !!! 
~ ~ ~ ~ ~ ~ ~ ~ 


~ ~ ~ ~ ~ ~ ~ ~ BUT NOW EVERYTHING ELSE WORKS ~ ~ ~ ~ ~ ~ ~ ~ 


-Create group and user

*** Now at 1:52:45 => COME BACK HERE AGAIN - Apply this on Virtual Box in Ubuntu Server 22.04  ! ! !

-Create environment
-Get project from Git
-Install packages (and PostgreSQL)
-Install and set up gunicorn
-Install and set up supervisor
-Set up NGINX





# Bulma
General rules: 
When you combine a title and a subtitle, they move closer together.
As a rule of thumb, it is recommended to use a size difference of two. 
So if you use a "title is-1, combine it with a subtitle is-3". "T-1 & ST-3"
**** You can maintain the normal spacing between titles and subtitles 
if you use the "is-spaced" modifier on the first element. "IS-SPACED"
* <p class="title is-1 is-spaced">Title 1</p>
  <p class="subtitle is-3">Subtitle 3</p>
* <p class="title is-2 is-spaced">Title 2</p>
  <p class="subtitle is-4">Subtitle 4</p>
* <p class="title is-3 is-spaced">Title 3</p>
  <p class="subtitle is-5">Subtitle 5</p>